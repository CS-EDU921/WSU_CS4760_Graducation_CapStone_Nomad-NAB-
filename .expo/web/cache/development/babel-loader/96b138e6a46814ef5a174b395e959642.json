{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Images from \"../../config/Images\";\nimport base from \"../../themes/BasicTheme\";\nimport { globalSty } from \"../style/globalStyle\";\nimport { useForm } from \"react-hook-form\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LocScreenMan = function LocScreenMan(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    street = _useState2[0],\n    onChangeText = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    city = _useState4[0],\n    onChangeText1 = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    state = _useState6[0],\n    onChangeText2 = _useState6[1];\n  var _useForm = useForm(),\n    register = _useForm.register,\n    handleSubmit = _useForm.handleSubmit;\n  var onsubmit = function onsubmit(data) {\n    console.log(data);\n    navigation.navigate(\"Questions\");\n  };\n  return _jsx(View, {\n    style: globalSty.container,\n    children: _jsxs(ImageBackground, {\n      source: Images.NABBackgroundLogo,\n      resizeMode: \"cover\",\n      style: globalSty.image,\n      children: [_jsx(Text, {\n        children: \"Street\"\n      }), _jsx(TextInput, {\n        style: globalSty.input,\n        onChangeText: function onChangeText(_onChangeText) {\n          register('Street', {\n            require: true\n          });\n        },\n        value: street\n      }), _jsx(Text, {\n        children: \"City\"\n      }), _jsx(TextInput, {\n        style: globalSty.input,\n        onChangeText: function onChangeText(onChangeText1) {\n          register('City', {\n            require: true\n          });\n        },\n        value: city\n      }), _jsx(Text, {\n        children: \"State\"\n      }), _jsx(TextInput, {\n        style: globalSty.input,\n        onChangeText: function onChangeText(onChangeText1) {\n          register('State', {\n            require: true\n          });\n        },\n        value: state\n      }), _jsx(Button, {\n        title: \"Submit\",\n        onPress: handleSubmit(onsubmit)\n      })]\n    })\n  });\n};\nexport default LocScreenMan;","map":{"version":3,"names":["React","useState","Images","base","globalSty","useForm","LocScreenMan","navigation","street","onChangeText","city","onChangeText1","state","onChangeText2","register","handleSubmit","onsubmit","data","console","log","navigate","container","NABBackgroundLogo","image","input","require"],"sources":["C:/Classes/SPR 2023/SE II/Need a Bed/NeedABed/src/screen/locScreen_man.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport { ImageBackground, Button, View, TextInput, Text } from 'react-native';\r\n\r\nimport Images from '../../config/Images';\r\nimport base from '../../themes/BasicTheme';\r\nimport { globalSty } from '../style/globalStyle';\r\nimport {useForm} from \"react-hook-form\"\r\n\r\nconst LocScreenMan = ( {navigation} ) => {\r\n\r\n  const [street, onChangeText] = useState('');\r\n  const [city, onChangeText1] = useState('');\r\n  const [state, onChangeText2] = useState('');\r\n  const {register, handleSubmit} = useForm();\r\n\r\n  // function submitInfo() {\r\n  //   console.log(\"Sumited Manual Location Data\")\r\n  //   console.log(\"Location:\");\r\n  //   console.log(street);\r\n  //   console.log(city);\r\n  //   console.log(state);\r\n  //   navigation.navigate(\"Questions\")\r\n  // }\r\n  const onsubmit = (data) => {\r\n    console.log(data);\r\n    navigation.navigate(\"Questions\");\r\n  }\r\n    return (\r\n      <View style={globalSty.container}>\r\n        <ImageBackground source={Images.NABBackgroundLogo} resizeMode=\"cover\" style={globalSty.image}>\r\n            <Text>Street</Text>\r\n              <TextInput\r\n              style={globalSty.input}\r\n              onChangeText={(onChangeText) =>{ register('Street', { require: true })}}\r\n              value={street}\r\n            />\r\n            <Text>City</Text>\r\n             <TextInput\r\n              style={globalSty.input}\r\n              onChangeText={(onChangeText1) =>{ register('City', { require: true })}}\r\n              //onChangeText={onChangeText1}\r\n              value={city}\r\n            />\r\n            <Text>State</Text>\r\n            <TextInput\r\n              style={globalSty.input}\r\n              onChangeText={(onChangeText1) =>{ register('State', { require: true })}}\r\n              //onChangeText={onChangeText2}\r\n              value={state}\r\n            />\r\n            <Button\r\n              title=\"Submit\"\r\n              onPress={handleSubmit(onsubmit)}\r\n                //onPress={() => submitInfo()} style={base.Button}\r\n            />\r\n        </ImageBackground>\r\n      </View>\r\n    )\r\n   \r\n};\r\n\r\n\r\nexport default LocScreenMan;"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAC;AAAA;AAAA;AAAA;AAAA;AAGtC,OAAOC,MAAM;AACb,OAAOC,IAAI;AACX,SAASC,SAAS;AAClB,SAAQC,OAAO,QAAO,iBAAiB;AAAA;AAAA;AAEvC,IAAMC,YAAY,GAAG,SAAfA,YAAY,OAAuB;EAAA,IAAjBC,UAAU,QAAVA,UAAU;EAEhC,gBAA+BN,QAAQ,CAAC,EAAE,CAAC;IAAA;IAApCO,MAAM;IAAEC,YAAY;EAC3B,iBAA8BR,QAAQ,CAAC,EAAE,CAAC;IAAA;IAAnCS,IAAI;IAAEC,aAAa;EAC1B,iBAA+BV,QAAQ,CAAC,EAAE,CAAC;IAAA;IAApCW,KAAK;IAAEC,aAAa;EAC3B,eAAiCR,OAAO,EAAE;IAAnCS,QAAQ,YAARA,QAAQ;IAAEC,YAAY,YAAZA,YAAY;EAU7B,IAAMC,QAAQ,GAAG,SAAXA,QAAQ,CAAIC,IAAI,EAAK;IACzBC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjBV,UAAU,CAACa,QAAQ,CAAC,WAAW,CAAC;EAClC,CAAC;EACC,OACE,KAAC,IAAI;IAAC,KAAK,EAAEhB,SAAS,CAACiB,SAAU;IAAA,UAC/B,MAAC,eAAe;MAAC,MAAM,EAAEnB,MAAM,CAACoB,iBAAkB;MAAC,UAAU,EAAC,OAAO;MAAC,KAAK,EAAElB,SAAS,CAACmB,KAAM;MAAA,WACzF,KAAC,IAAI;QAAA,UAAC;MAAM,EAAO,EACjB,KAAC,SAAS;QACV,KAAK,EAAEnB,SAAS,CAACoB,KAAM;QACvB,YAAY,EAAE,sBAACf,aAAY,EAAI;UAAEK,QAAQ,CAAC,QAAQ,EAAE;YAAEW,OAAO,EAAE;UAAK,CAAC,CAAC;QAAA,CAAE;QACxE,KAAK,EAAEjB;MAAO,EACd,EACF,KAAC,IAAI;QAAA,UAAC;MAAI,EAAO,EAChB,KAAC,SAAS;QACT,KAAK,EAAEJ,SAAS,CAACoB,KAAM;QACvB,YAAY,EAAE,sBAACb,aAAa,EAAI;UAAEG,QAAQ,CAAC,MAAM,EAAE;YAAEW,OAAO,EAAE;UAAK,CAAC,CAAC;QAAA,CAAE;QAEvE,KAAK,EAAEf;MAAK,EACZ,EACF,KAAC,IAAI;QAAA,UAAC;MAAK,EAAO,EAClB,KAAC,SAAS;QACR,KAAK,EAAEN,SAAS,CAACoB,KAAM;QACvB,YAAY,EAAE,sBAACb,aAAa,EAAI;UAAEG,QAAQ,CAAC,OAAO,EAAE;YAAEW,OAAO,EAAE;UAAK,CAAC,CAAC;QAAA,CAAE;QAExE,KAAK,EAAEb;MAAM,EACb,EACF,KAAC,MAAM;QACL,KAAK,EAAC,QAAQ;QACd,OAAO,EAAEG,YAAY,CAACC,QAAQ;MAAE,EAEhC;IAAA;EACY,EACb;AAGb,CAAC;AAGD,eAAeV,YAAY"},"metadata":{},"sourceType":"module"}