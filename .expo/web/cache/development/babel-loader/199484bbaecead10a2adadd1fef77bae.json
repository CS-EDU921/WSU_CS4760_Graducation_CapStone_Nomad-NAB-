{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState } from 'react';\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport CheckBox from \"../../config/CheckBox\";\nimport Images from \"../../config/Images\";\nimport base from \"../../themes/BasicTheme\";\nimport { globalSty } from \"../style/globalStyle\";\nimport \"../../config/i18n\";\nimport { useTranslation } from 'react-i18next';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar intialState = {\n  PC: false,\n  Disabled: false,\n  notEnglish: false,\n  Deaf: false\n};\nvar QuestionScreenTwo = function QuestionScreenTwo(_ref) {\n  var navigation = _ref.navigation;\n  var _useTranslation = useTranslation(),\n    t = _useTranslation.t;\n  var _useState = useState(intialState),\n    _useState2 = _slicedToArray(_useState, 2),\n    state = _useState2[0],\n    setState = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    toggleButton = _useState4[0],\n    setToggleButton = _useState4[1];\n  return _jsx(View, {\n    style: globalSty.container,\n    children: _jsxs(ImageBackground, {\n      source: Images.NABBackgroundLogo,\n      resizeMode: \"cover\",\n      style: globalSty.image,\n      children: [_jsx(Text, {\n        children: t('QuestionTran.text')\n      }), _jsx(View, {\n        style: globalSty.CheckBoxForm,\n        children: _jsx(CheckBox, {\n          onPress: function onPress(value) {\n            return setState(_objectSpread(_objectSpread({}, state), {}, {\n              PC: value\n            }));\n          },\n          title: t('QuestionTran.PC'),\n          isChecked: state.PC\n        })\n      }), _jsx(View, {\n        style: globalSty.CheckBoxForm,\n        children: _jsx(CheckBox, {\n          onPress: function onPress(value) {\n            return setState(_objectSpread(_objectSpread({}, state), {}, {\n              Disabled: value\n            }));\n          },\n          title: t('QuestionTran.Disabled'),\n          isChecked: state.Disabled\n        })\n      }), _jsx(View, {\n        style: globalSty.CheckBoxForm,\n        children: _jsx(CheckBox, {\n          onPress: function onPress(value) {\n            return setState(_objectSpread(_objectSpread({}, state), {}, {\n              notEnglish: value\n            }));\n          },\n          title: t('QuestionTran.notEnglish'),\n          isChecked: state.notEnglish\n        })\n      }), _jsx(View, {\n        style: globalSty.CheckBoxForm,\n        children: _jsx(CheckBox, {\n          onPress: function onPress(value) {\n            return setState(_objectSpread(_objectSpread({}, state), {}, {\n              Deaf: value\n            }));\n          },\n          title: t('QuestionTran.Deaf'),\n          isChecked: state.Deaf\n        })\n      }), _jsx(Button, {\n        title: t('QuestionTran.contBtn'),\n        onPress: function onPress() {\n          return navigation.navigate(\"MapSr\");\n        },\n        style: base.Button\n      })]\n    })\n  });\n};\nexport default QuestionScreenTwo;","map":{"version":3,"names":["React","useState","CheckBox","Images","base","globalSty","useTranslation","intialState","PC","Disabled","notEnglish","Deaf","QuestionScreenTwo","navigation","t","state","setState","toggleButton","setToggleButton","container","NABBackgroundLogo","image","CheckBoxForm","value","navigate","Button"],"sources":["C:/Classes/SPR 2023/SE II/Need a Bed/NeedABed/src/screen/QuestionScreen2.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport { ImageBackground, Button, View, Text} from 'react-native';\r\nimport CheckBox from \"../../config/CheckBox\";\r\n\r\nimport Images from '../../config/Images';\r\nimport base from '../../themes/BasicTheme';\r\nimport { globalSty } from '../style/globalStyle';\r\n\r\nimport '../../config/i18n';\r\nimport {useTranslation} from 'react-i18next';\r\n\r\nconst intialState = {\r\n  PC:false,\r\n  Disabled:false,\r\n  notEnglish:false,\r\n  Deaf:false\r\n};\r\n\r\nconst QuestionScreenTwo = ( {navigation} ) => {\r\n\r\n  const {t} = useTranslation();\r\n  const [state, setState]=useState(intialState);\r\n  const [toggleButton,setToggleButton] = useState(false)\r\n\r\n\r\n    return (\r\n      <View style={globalSty.container}>\r\n        <ImageBackground source={Images.NABBackgroundLogo} resizeMode=\"cover\" style={globalSty.image}>\r\n          <Text>{t('QuestionTran.text')}</Text>\r\n          <View style={globalSty.CheckBoxForm}>\r\n          <CheckBox\r\n                onPress={(value) => setState({...state,PC:value})}\r\n                title={t('QuestionTran.PC')}\r\n                isChecked={state.PC}\r\n              />\r\n            </View>\r\n            <View style={globalSty.CheckBoxForm}>\r\n          <CheckBox\r\n                onPress={(value) => setState({...state,Disabled:value})}\r\n                title={t('QuestionTran.Disabled')}\r\n                isChecked={state.Disabled}\r\n              />\r\n            </View>\r\n            <View style={globalSty.CheckBoxForm}>\r\n          <CheckBox\r\n                onPress={(value) => setState({...state,notEnglish:value})}\r\n                title={t('QuestionTran.notEnglish')}\r\n                isChecked={state.notEnglish}\r\n              />\r\n            </View>\r\n            <View style={globalSty.CheckBoxForm}>\r\n          <CheckBox\r\n                onPress={(value) => setState({...state,Deaf:value})}\r\n                title={t('QuestionTran.Deaf')}\r\n                isChecked={state.Deaf}\r\n              />\r\n            </View>\r\n           \r\n\r\n            <Button\r\n              title={t('QuestionTran.contBtn')}\r\n                onPress={() => navigation.navigate(\"MapSr\")} style={base.Button}\r\n            />\r\n        </ImageBackground>\r\n      </View>\r\n    )\r\n};\r\n\r\n\r\n\r\nexport default QuestionScreenTwo;"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAC;AAAA;AAAA;AAAA;AAEtC,OAAOC,QAAQ;AAEf,OAAOC,MAAM;AACb,OAAOC,IAAI;AACX,SAASC,SAAS;AAElB;AACA,SAAQC,cAAc,QAAO,eAAe;AAAC;AAAA;AAE7C,IAAMC,WAAW,GAAG;EAClBC,EAAE,EAAC,KAAK;EACRC,QAAQ,EAAC,KAAK;EACdC,UAAU,EAAC,KAAK;EAChBC,IAAI,EAAC;AACP,CAAC;AAED,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiB,OAAuB;EAAA,IAAjBC,UAAU,QAAVA,UAAU;EAErC,sBAAYP,cAAc,EAAE;IAArBQ,CAAC,mBAADA,CAAC;EACR,gBAAwBb,QAAQ,CAACM,WAAW,CAAC;IAAA;IAAtCQ,KAAK;IAAEC,QAAQ;EACtB,iBAAuCf,QAAQ,CAAC,KAAK,CAAC;IAAA;IAA/CgB,YAAY;IAACC,eAAe;EAGjC,OACE,KAAC,IAAI;IAAC,KAAK,EAAEb,SAAS,CAACc,SAAU;IAAA,UAC/B,MAAC,eAAe;MAAC,MAAM,EAAEhB,MAAM,CAACiB,iBAAkB;MAAC,UAAU,EAAC,OAAO;MAAC,KAAK,EAAEf,SAAS,CAACgB,KAAM;MAAA,WAC3F,KAAC,IAAI;QAAA,UAAEP,CAAC,CAAC,mBAAmB;MAAC,EAAQ,EACrC,KAAC,IAAI;QAAC,KAAK,EAAET,SAAS,CAACiB,YAAa;QAAA,UACpC,KAAC,QAAQ;UACH,OAAO,EAAE,iBAACC,KAAK;YAAA,OAAKP,QAAQ,iCAAKD,KAAK;cAACP,EAAE,EAACe;YAAK,GAAE;UAAA,CAAC;UAClD,KAAK,EAAET,CAAC,CAAC,iBAAiB,CAAE;UAC5B,SAAS,EAAEC,KAAK,CAACP;QAAG;MACpB,EACG,EACP,KAAC,IAAI;QAAC,KAAK,EAAEH,SAAS,CAACiB,YAAa;QAAA,UACtC,KAAC,QAAQ;UACH,OAAO,EAAE,iBAACC,KAAK;YAAA,OAAKP,QAAQ,iCAAKD,KAAK;cAACN,QAAQ,EAACc;YAAK,GAAE;UAAA,CAAC;UACxD,KAAK,EAAET,CAAC,CAAC,uBAAuB,CAAE;UAClC,SAAS,EAAEC,KAAK,CAACN;QAAS;MAC1B,EACG,EACP,KAAC,IAAI;QAAC,KAAK,EAAEJ,SAAS,CAACiB,YAAa;QAAA,UACtC,KAAC,QAAQ;UACH,OAAO,EAAE,iBAACC,KAAK;YAAA,OAAKP,QAAQ,iCAAKD,KAAK;cAACL,UAAU,EAACa;YAAK,GAAE;UAAA,CAAC;UAC1D,KAAK,EAAET,CAAC,CAAC,yBAAyB,CAAE;UACpC,SAAS,EAAEC,KAAK,CAACL;QAAW;MAC5B,EACG,EACP,KAAC,IAAI;QAAC,KAAK,EAAEL,SAAS,CAACiB,YAAa;QAAA,UACtC,KAAC,QAAQ;UACH,OAAO,EAAE,iBAACC,KAAK;YAAA,OAAKP,QAAQ,iCAAKD,KAAK;cAACJ,IAAI,EAACY;YAAK,GAAE;UAAA,CAAC;UACpD,KAAK,EAAET,CAAC,CAAC,mBAAmB,CAAE;UAC9B,SAAS,EAAEC,KAAK,CAACJ;QAAK;MACtB,EACG,EAGP,KAAC,MAAM;QACL,KAAK,EAAEG,CAAC,CAAC,sBAAsB,CAAE;QAC/B,OAAO,EAAE;UAAA,OAAMD,UAAU,CAACW,QAAQ,CAAC,OAAO,CAAC;QAAA,CAAC;QAAC,KAAK,EAAEpB,IAAI,CAACqB;MAAO,EAClE;IAAA;EACY,EACb;AAEb,CAAC;AAID,eAAeb,iBAAiB"},"metadata":{},"sourceType":"module"}